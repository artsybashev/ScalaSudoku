package sudoku

object Main {
  def main(args: Array[String]): Unit = {
    val input: Array[Int] =
      Array(
        14,0,0,22, 7,24,0,0,0,0,12,0,0,17,21, 9,10,0, 4,0,0,16,0,18, 1,25, 4,0,0,0,0,0,18,11,0,0,23,0, 2,13,24,0,16,19,0,0,0,0,0,21,0,18,0,13,0,12, 5,15, 1,10,14,0,0,0,0,0, 3,11,0,0,0,0, 7,0, 6,0,0,0,24, 2,23,14,16,0, 9, 1,0,0,18,0,12,0,0,25,13,11,0,0,22, 4,0,0,21,23,0,0,0,17,0,0,0, 6,0,0,0,0,0,0,0, 5,13,0,0,0, 9,11,0,0,0,13,0,0, 5,0,0,0,25,0,0,22,10, 8,0,0,0,14,0, 1,17,16,10,0,18,16, 8,0,25,24, 9,0,0,0, 7,19,0,0,0,12, 2,0, 4,0,0,0,11,22,20,0,0,0,0, 6, 8,0,0,0,16,12,0,24,25,21,0,0, 4,0,0,0, 7, 3,0,0, 4, 7,0,17,21,0,20,19,13,0,0,0,0,0,0,14,0,15, 6,0,12, 8,0,21,0,24,0,23,0,0,12,0,0,0,0,15,0, 8,22, 5,0,0,0,0,0,0,0,0,0,0,11,0,0,25,12,0,0,0,0,0,0,0,0,17,0,0, 5,0,24, 1,13,16, 8,0,16,25,12,0,0,15,0,17,0,24,0, 4, 3,19,0, 7,0,0,0,0,0,14,21,0,23,0,0, 4,15,0,0,0,0,21,0,0,0,0,0, 6,0,0,0,0,25,17,0,0, 2,0,21, 9,0,0,0,0,0, 6,0,22,18, 1,0, 2,0,24,0,15,0,0, 5,19,11,0,24, 8,10,14,19,0,20,0,0,22,0,0,0,0,0,0,0,0, 1, 2,0,0, 6,0,0,0,0,0,0,0,0,0,0,19, 1,15,0,21,0,0,0,0, 9,0,0, 3,0,16,0,13,0, 7, 8,0,10, 5,0,25,0,0,0,0,0,0,17,19,14,0,20,24,0,12,11,0,0,20, 5,0,0,0,16,0,0,22,17, 8,0, 9, 6,0,0,0, 3,11,0,0,0,0,25,18, 6,0,0,0, 1,0, 3,20,0,0,0, 7,24,0,0,0, 2, 5,13,0,19, 8,23,0,17,17,13,19,0,16,0,0,0,15,24, 3,0,0,20,0,0,0, 6,0,0,10,0,0,0, 7, 9,0,0,0,12, 2,0,0,0,0,0,0,0, 5,0,0,0, 8,0,0,0, 7,25,0,0,13,11,0,0,22,10,19,0,0,12,0,24,0,0,25, 3,0,23, 7,16, 9,21,0,0,0,18,0, 7,0,0,0,0, 6,23,0,0,0,0,0, 3,13,15,20,12,19,0, 2,0, 4,0,19,0,0,0,0,0,16, 7,0,15,18,22,0,13,0,0, 9, 2,0,0,0,0,0,10,20, 4,23,0, 5,0,0,22,0,13, 8,21, 2,0,0, 6,0,0,0,0,11,17,18,0,0,24

      )

    val ruleProvider = new StandardRuleProvider(5)
    val viewProvider = new SudokuViewProvider(ruleProvider)
    val field = ruleProvider.create(input)
    println(viewProvider.mkString(field))
    println("-- Solution --")
    val result = SudokuSolver.solve(field)
    println(viewProvider.mkString(result.get.sudokuField))
  }
}
